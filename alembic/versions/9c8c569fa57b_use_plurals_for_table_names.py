"""Use plurals for table names

Revision ID: 9c8c569fa57b
Revises: a91fcd6e4605
Create Date: 2025-09-09 17:59:32.558293

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9c8c569fa57b'
down_revision: Union[str, Sequence[str], None] = 'a91fcd6e4605'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###op.drop_index(op.f('ix_rack_name'), table_name='rack')
    op.drop_index(op.f('ix_rack_serial_number'), table_name='rack')
    op.drop_table('rack')
    op.drop_index(op.f('ix_device_name'), table_name='device')
    op.drop_table('device')
    device_type = sa.Enum('SERVER', 'SWITCH', 'ROUTER', 'STORAGE', 'OTHER', name='devicetype')
    device_type.drop(op.get_bind())
    op.create_table('devices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('serial_number', sa.String(length=255), nullable=False),
    sa.Column('number_of_units', sa.Integer(), nullable=False),
    sa.Column('power_consumption', sa.Integer(), nullable=False),
    sa.Column('device_type', sa.Enum('SERVER', 'SWITCH', 'ROUTER', 'STORAGE', 'OTHER', name='devicetype'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('serial_number')
    )
    op.create_index(op.f('ix_devices_name'), 'devices', ['name'], unique=False)
    op.create_table('racks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('serial_number', sa.String(), nullable=False),
    sa.Column('number_of_units', sa.Integer(), nullable=False),
    sa.Column('max_power_consumption', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_racks_name'), 'racks', ['name'], unique=False)
    op.create_index(op.f('ix_racks_serial_number'), 'racks', ['serial_number'], unique=True)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('devices')
    op.create_table('device',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('serial_number', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('number_of_units', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('power_consumption', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('device_type', postgresql.ENUM('SERVER', 'SWITCH', 'ROUTER', 'STORAGE', 'OTHER', name='devicetype'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('device_pkey')),
    sa.UniqueConstraint('serial_number', name=op.f('device_serial_number_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_device_name'), 'device', ['name'], unique=False)

    op.drop_table('racks')
    op.create_table('rack',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('serial_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('number_of_units', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('max_power_consumption', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('rack_pkey'))
    )
    op.create_index(op.f('ix_rack_serial_number'), 'rack', ['serial_number'], unique=True)
    op.create_index(op.f('ix_rack_name'), 'rack', ['name'], unique=False)
    op.drop_index(op.f('ix_racks_serial_number'), table_name='racks')
    op.drop_index(op.f('ix_racks_name'), table_name='racks')
    op.drop_table('racks')
    op.drop_index(op.f('ix_devices_name'), table_name='devices')
    op.drop_table('devices')
    # ### end Alembic commands ###
